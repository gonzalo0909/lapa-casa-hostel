# lapa-casa-hostel/backend/docker-compose.yml

version: '3.9'

services:
  # ===========================================
  # BACKEND API
  # ===========================================
  backend:
    container_name: lapa-casa-backend
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/lapa_casa_hostel?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lapa-casa-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'node', '-e', 'require("http").get("http://localhost:5000/health")']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===========================================
  # POSTGRESQL DATABASE
  # ===========================================
  postgres:
    container_name: lapa-casa-postgres
    image: postgres:16-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=lapa_casa_hostel
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lapa-casa-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # REDIS CACHE
  # ===========================================
  redis:
    container_name: lapa-casa-redis
    image: redis:7-alpine
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --requirepass ""
    volumes:
      - redis_data:/data
    networks:
      - lapa-casa-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # ===========================================
  # PRISMA STUDIO (Development only)
  # ===========================================
  prisma-studio:
    container_name: lapa-casa-prisma-studio
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - '5555:5555'
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/lapa_casa_hostel?schema=public
    command: npx prisma studio
    depends_on:
      - postgres
    networks:
      - lapa-casa-network
    profiles:
      - tools

  # ===========================================
  # PROMETHEUS MONITORING
  # ===========================================
  prometheus:
    container_name: lapa-casa-prometheus
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - lapa-casa-network
    restart: unless-stopped
    profiles:
      - monitoring

  # ===========================================
  # GRAFANA DASHBOARDS
  # ===========================================
  grafana:
    container_name: lapa-casa-grafana
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./infrastructure/monitoring/grafana-dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - lapa-casa-network
    restart: unless-stopped
    profiles:
      - monitoring

  # ===========================================
  # MAILHOG (Email testing - Development)
  # ===========================================
  mailhog:
    container_name: lapa-casa-mailhog
    image: mailhog/mailhog:latest
    ports:
      - '1025:1025'
      - '8025:8025'
    networks:
      - lapa-casa-network
    profiles:
      - tools

  # ===========================================
  # PGADMIN (Database UI - Development)
  # ===========================================
  pgadmin:
    container_name: lapa-casa-pgadmin
    image: dpage/pgadmin4:latest
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@lapacasahostel.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - lapa-casa-network
    profiles:
      - tools

  # ===========================================
  # REDIS COMMANDER (Redis UI - Development)
  # ===========================================
  redis-commander:
    container_name: lapa-casa-redis-commander
    image: rediscommander/redis-commander:latest
    ports:
      - '8081:8081'
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - lapa-casa-network
    profiles:
      - tools

# ===========================================
# VOLUMES
# ===========================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  pgadmin_data:
    driver: local

# ===========================================
# NETWORKS
# ===========================================
networks:
  lapa-casa-network:
    driver: bridge
    name: lapa-casa-network
